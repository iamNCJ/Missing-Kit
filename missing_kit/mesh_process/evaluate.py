# TODO: call ETH3D

outputs = [
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.351906 0.561061 0.760605 0.982349 1 1 1 1 1 1 1 1 1
Accuracies: 0.579414 0.745945 0.860374 0.939305 0.971524 0.981777 0.992963 0.99995 1 1 1 1 1
F1-scores: 0.437871 0.640427 0.807419 0.960344 0.985556 0.990805 0.996469 0.999975 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.621175 0.797165 0.884579 0.986259 1 1 1 1 1 1 1 1 1
Accuracies: 0.627724 0.770266 0.865979 0.943002 0.964903 0.976104 0.99379 0.999944 1 1 1 1 1
F1-scores: 0.624432 0.783485 0.87518 0.964146 0.982138 0.987907 0.996885 0.999972 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.729002 0.884139 0.951415 0.999594 1 1 1 1 1 1 1 1 1
Accuracies: 0.59087 0.734865 0.847222 0.936399 0.962336 0.975233 0.993669 0.999927 1 1 1 1 1
F1-scores: 0.652708 0.80262 0.896301 0.966965 0.980807 0.987461 0.996824 0.999963 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.596323 0.874093 0.97944 1 1 1 1 1 1 1 1 1 1
Accuracies: 0.280254 0.411738 0.58406 0.800521 0.899294 0.94712 0.972258 0.999742 1 1 1 1 1
F1-scores: 0.381306 0.559789 0.731758 0.88921 0.946977 0.972842 0.985934 0.999871 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.692902 0.934983 0.988049 1 1 1 1 1 1 1 1 1 1
Accuracies: 0.269815 0.401209 0.592186 0.808451 0.896874 0.944494 0.97318 0.999831 1 1 1 1 1
F1-scores: 0.388392 0.561481 0.740534 0.894081 0.945634 0.971455 0.986408 0.999916 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.678574 0.907866 0.985034 1 1 1 1 1 1 1 1 1 1
Accuracies: 0.253313 0.372715 0.552361 0.768985 0.873161 0.941244 0.975079 0.999846 1 1 1 1 1
F1-scores: 0.368911 0.528471 0.707813 0.869408 0.932286 0.969733 0.987382 0.999923 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.63432 0.811863 0.897922 0.989002 1 1 1 1 1 1 1 1 1
Accuracies: 0.669811 0.804563 0.89158 0.942557 0.965315 0.976302 0.9928 0.999771 1 1 1 1 1
F1-scores: 0.651583 0.808197 0.89474 0.965221 0.982351 0.988009 0.996387 0.999885 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.600855 0.802324 0.897043 0.986471 1 1 1 1 1 1 1 1 1
Accuracies: 0.649838 0.787298 0.884075 0.941041 0.965148 0.975607 0.992521 0.999814 1 1 1 1 1
F1-scores: 0.624387 0.79474 0.890512 0.963221 0.982265 0.987653 0.996247 0.999907 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.648419 0.815691 0.898532 0.987881 1 1 1 1 1 1 1 1 1
Accuracies: 0.670263 0.795467 0.889539 0.947953 0.968236 0.977797 0.993887 0.99995 1 1 1 1 1
F1-scores: 0.65916 0.805452 0.894013 0.967505 0.983862 0.988774 0.996934 0.999975 1 1 1 1 1""",
    """Tolerances: 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 1.5 2 2.5 3 10
Completenesses: 0.655124 0.81905 0.902344 0.990275 1 1 1 1 1 1 1 1 1
Accuracies: 0.68848 0.808142 0.894018 0.947239 0.966427 0.977378 0.994004 0.999928 1 1 1 1 1
F1-scores: 0.671388 0.813559 0.898162 0.968279 0.982927 0.988559 0.996993 0.999964 1 1 1 1 1"""
]

model_names = [
    'fullon_36',
    'nn_36',
    'nn_36_c5',
    'fullon_180',
    'nn_180',
    'nn_180_c5',
    '1e-2',
    '1e-3sqrt10',
    '1e-3sqrt10_2sigma',
    '1e-2_2sigma'
]


def parse_output(output):
    lines = output.split('\n')
    tol = lines[0].split()[1:]
    completeness = lines[1].split()[1:]
    acc = lines[2].split()[1:]
    f1 = lines[3].split()[1:]
    return tol, completeness, acc, f1


if __name__ == '__main__':
    tols = []
    completenesses = []
    accs = []
    f1s = []
    for output in outputs:
        tol, completeness, acc, f1 = parse_output(output)
        tols = tol
        completenesses.append(completeness)
        accs.append(acc)
        f1s.append(f1)

    for i in range(len(tols)):
        with open(f"tolerance_{tols[i]}.csv", 'w') as f:
            f.write(f'model_name, Completenesses, Accuracies, F1, tol={tols[i]}\n')
            for j in range(len(completenesses)):
                f.write(f'{model_names[j]}, {completenesses[j][i]}, {accs[j][i]}, {f1s[j][i]},\n')
